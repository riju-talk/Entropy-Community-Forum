version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: entropy-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: entropy
      POSTGRES_PASSWORD: entropy_password
      POSTGRES_DB: entropy_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U entropy"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: entropy-nextjs
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://entropy:entropy_password@postgres:5432/entropy_db?schema=public
      - NEXTAUTH_URL=http://localhost:5000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-change-this-secret-in-production}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - NEXT_PUBLIC_SPARK_API_URL=http://localhost:8000
      - NEXT_PUBLIC_AI_BACKEND_TOKEN=${AI_BACKEND_TOKEN:-spark-secure-token-2024}
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && node server.js"

  # Spark AI Agent
  spark-ai:
    build:
      context: ./spark-ai-agent
      dockerfile: Dockerfile
    container_name: entropy-spark-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - AI_BACKEND_TOKEN=${AI_BACKEND_TOKEN:-spark-secure-token-2024}
      - AI_BACKEND_URL=http://nextjs:5000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_MODEL=gpt-3.5-turbo
      - LLM_TEMPERATURE=0.7
      - LLM_MAX_TOKENS=1000
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - CHROMA_PERSIST_DIR=/app/data/chroma_db
      - UPLOAD_DIR=/app/data/uploads
      - DEBUG=False
    volumes:
      - spark_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  spark_data:
    driver: local

networks:
  default:
    name: entropy-network
